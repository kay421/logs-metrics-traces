metrics_generator_enabled: true
search_enabled: true

usage_report:
  reporting_enabled: false
  
server:
  http_listen_port: ${TEMPO_PORT}

distributor:
  receivers:
    otlp:
      protocols:
        http:
        grpc:

metrics_generator:
  storage:
    path: '/tmp/tempo/generator/wal'
    remote_write:
      - url: 'http://${PROMETHEUS_HOST}:${PROMETHEUS_PORT}/api/v1/write'
        send_exemplars: true

storage:
  trace:
    backend: 'local' # backend configuration to use
    block:
      bloom_filter_false_positive: .05 # bloom filter false positive rate.  lower values create larger filters but fewer false positives
      index_downsample_bytes: 1000 # number of bytes per index record
      encoding: 'zstd' # block encoding/compression.  options: none, gzip, lz4-64k, lz4-256k, lz4-1M, lz4, snappy, zstd, s2
    wal:
      path: '/tmp/tempo/wal' # where to store the the wal locally
      encoding: 'snappy' # wal encoding/compression.  options: none, gzip, lz4-64k, lz4-256k, lz4-1M, lz4, snappy, zstd, s2
    local:
      path: '/tmp/tempo/blocks'
    pool:
      max_workers: 100 # worker pool determines the number of parallel requests to the object store backend
      queue_depth: 10000

overrides:
  metrics_generator_processors:
    - 'service-graphs'
    - 'span-metrics'
